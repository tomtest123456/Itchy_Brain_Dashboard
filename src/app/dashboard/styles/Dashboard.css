/* 
    /src/app/dashboard/styles/Dashboard.css
    ---------------------------------------
    Grid Layout Styling Guide:
    
    1. Grid Container (.layout)
       - Shows grid lines
       - No padding/margin to ensure accurate snapping
    
    2. Grid Items (.react-grid-item)
       - Uses wrapper and inner container for fixed pixel spacing
       - Visual styles don't affect positioning
    
    3. Placeholder (.react-grid-placeholder)
       - Matches exact grid cell size
    
    4. Resize Handle (.react-resizable-handle)
       - Positioned relative to grid cell
*/

:root {
    --grid-columns      : 20;   /* Default value, will be updated by JavaScript */
    --grid-lines-opacity: 0.4;  /* Default opacity for grid lines */
    --card-gap          : 2px;  /* Fixed pixel gap for card spacing */
}

/* Grid Container with visible grid lines */
.layout {
    background-image: 
        linear-gradient(to right, theme('colors.col_text' / var(--grid-lines-opacity)) 1px, transparent 1px),
        linear-gradient(to bottom, theme('colors.col_text' / var(--grid-lines-opacity)) 1px, transparent 1px);
    background-size: calc(100% / var(--grid-columns)) 20px;
    min-height: 800px;
    background-position: 0 0;
}

/* Grid Items */
.react-grid-item {
    @apply m-0 p-0;
}

/* Grid Item Wrapper - Handles positioning and size */
.grid-item-wrapper {
    @apply w-full h-full flex items-center justify-center;
    padding: var(--card-gap);
}

/* Grid Item Inner - Handles visual styling and content */
.grid-item-inner {
    width: calc(100% - (var(--card-gap) * 2));
    height: calc(100% - (var(--card-gap) * 2));
    @apply bg-col_primary border border-col_accent rounded-lg flex items-stretch justify-stretch transition-all duration-200;
}

/* Placeholder shown while dragging */
.react-grid-placeholder {
    @apply bg-col_primary/20 border-2 border-dashed border-col_accent/40 rounded-lg m-0 p-0;
}

/* Resize handle in bottom-right corner */
.react-resizable-handle {
    @apply absolute bottom-[5px] right-[5px] w-5 h-5 cursor-se-resize;
    
    &::after {
        @apply content-[''] absolute right-[3px] bottom-[3px] w-[5px] h-[5px] border-r-2 border-b-2 border-col_text/50;
    }
}

/* Ensure grid container doesn't add unexpected spacing */
.react-grid-layout {
    @apply m-0 p-0;
}
